ul(class='nav nav-tabs')
	li(class="nav-item")
		a(data-toggle="tab", href="#tab-summary", class="nav-link active", role="tab") Summary
	li(class="nav-item")
		a(data-toggle="tab", href="#tab-raw", class="nav-link", role="tab") Raw

- var txCount = result.getblock.tx.length;

div(class="tab-content")
	div(id="tab-summary", class="tab-pane active", role="tabpanel")
		if (result.getblock.height == 0)
			div(class="alert alert-success", style="padding-bottom: 0;")
				h4(class="alert-heading h5") This is the Genesis Block!
				:markdown-it
					This is the first block in the blockchain.

		div(class="table-container")
			table(class="table table--primary")
				tr
					th(class="table-active properties-header") Block Hash
					td(class="monospace")
						a(href=("/block/" + result.getblock.hash)) #{result.getblock.hash}

				tr
					th(class="table-active properties-header") Previous Block Hash
					td(class="monospace")
						if (result.getblock.previousblockhash)
							a(href=("/block/" + result.getblock.previousblockhash)) #{result.getblock.previousblockhash}
						else if (result.getblock.height == 0)
							span This is the
								a(href="https://www.commerceblock.com") Genesis Block

				tr
					th(class="table-active properties-header") Next Block Hash
					td(class="monospace")
						if (nextblockhash)
							a(href=("/block/" + nextblockhash)) #{nextblockhash}
						else
							span None
							span(class="text-muted")  (latest block)

				tr
					th(class="table-active properties-header") Block Height
					td(class="monospace")
						a(href=("/block-height/" + result.getblock.height)) #{result.getblock.height.toLocaleString()}

				tr
					th(class="table-active properties-header") Contract Hash
					td(class="monospace") #{result.getblock.contracthash}

				tr
					th(class="table-active properties-header") Mapping Hash
					td(class="monospace") #{result.getblock.mappinghash}

				tr
					th(class="table-active properties-header") Attestation Status
					td(class="monospace")
						if (attestedheight == undefined || result.getblock.height > attestedheight)
							strong(class="text-danger") Not Attested
						else
							strong(class="text-primary") Attested

				tr
					th(class="table-active properties-header") Timestamp
					td(class="monospace") #{moment.utc(new Date(result.getblock.time * 1000)).format("DD-MM-YYYY HH:mm:ss")} UTC

				tr
					th(class="table-active properties-header") Transaction Count
					td(class="monospace") #{result.getblock.tx.length.toLocaleString()}

				tr
					th(class="table-active properties-header") Size
					td(class="monospace")
						span #{result.getblock.size.toLocaleString()} bytes
						span(class="text-muted")  (weight: #{result.getblock.weight.toLocaleString()})

				tr
					th(class="table-active properties-header") Version
					td(class="monospace") 0x#{result.getblock.versionHex}
						span(class="text-muted")  (decimal: #{result.getblock.version})

				tr
					th(class="table-active properties-header") Bits
					td(class="monospace") #{result.getblock.bits}

				tr
					th(class="table-active properties-header") Merkle Root
					td(class="monospace") #{result.getblock.merkleroot}

				tr
					th(class="table-active properties-header") Chainwork
					td(class="monospace") #{result.getblock.chainwork}

		h2(class="h4") Transactions (#{txCount.toLocaleString()})
			small  - Showing
			small
				if (txCount <= limit)
					span all
				else
					span #{(offset + 1)} - #{Math.min(offset + limit, txCount)}

		each tx, txIndex in result.transactions
			div(class="card mb-2r")
				div(class="card-header")
					if (tx && tx.txid)
						a(href=("/tx/" + tx.txid), class="monospace") #{tx.txid}
				div(class="card-body")
					div(class="row")
						div(class="col-md-6")
							include ./block-content-table-input.pug
						div(class="col-md-6")
							include ./block-content-table-output.pug

		if (txCount > limit)
			- var pageNumber = offset / limit + 1;
			- var pageCount = Math.floor(txCount / limit);
			- if (pageCount * limit < txCount) {
				- pageCount++;
			- }
			- var paginationUrlFunction = function(x) {
				- return paginationBaseUrl + "?limit=" + limit + "&offset=" + ((x - 1) * limit);
			- }

			hr

			include ./pagination.pug

	div(id="tab-raw", class="tab-pane", role="tabpanel")
		pre
			code #{JSON.stringify(result.getblock, null, 4)}
